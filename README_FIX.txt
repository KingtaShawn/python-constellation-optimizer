# Python Constellation Optimizer - 修复说明

本文件记录了项目中的一些修复内容和注意事项。

## 环境配置修复

1. **CUDA环境配置**
   - 确保CUDA版本与TensorFlow版本兼容
   - 建议使用CUDA 11.2+ 和 cuDNN 8.1+
   - 环境变量设置：确保CUDA_PATH和PATH环境变量正确配置

2. **TensorFlow警告**
   - 项目中已添加代码抑制TensorFlow警告：`os.environ['TF_CPP_MIN_LOG_LEVEL'] = '3'`
   - 如需查看更多日志信息，可以修改此设置

3. **中文字体支持**
   - 已添加多种中文字体支持，确保图表能正确显示中文
   - 支持的字体包括：SimHei、Microsoft YaHei、Arial Unicode MS

## 代码修复

1. **Sionna导入问题**
   - 添加了自动安装Sionna的代码，当检测到未安装时会尝试自动安装
   - 安装失败时提供明确的错误信息和手动安装指导

2. **文件路径问题**
   - 确保所有文件路径使用操作系统兼容的分隔符
   - 避免使用硬编码的绝对路径

3. **图像保存**
   - 修复了图像保存路径的问题，确保能正确保存到指定位置
   - 添加了文件存在性检查，避免覆盖现有文件

## 性能优化

1. **GPU内存管理**
   - 配置TensorFlow使用GPU内存增长模式，避免一次性占用全部GPU内存
   - 代码：`tf.config.experimental.set_memory_growth(gpus[0], True)`

2. **批量处理**
   - 优化了批量处理逻辑，提高了大数据量下的处理速度
   - 使用tqdm库显示处理进度，提升用户体验

3. **随机种子设置**
   - 为所有随机数生成器设置了固定种子，确保结果可复现
   - Sionna、NumPy和TensorFlow的随机种子均已设置

## 使用注意事项

1. **系统要求**
   - 建议在具有GPU的环境中运行，以获得最佳性能
   - CPU环境下某些优化算法可能运行较慢

2. **内存使用**
   - 处理大型星座图或进行大规模仿真时，建议关闭其他占用内存的程序
   - 对于64位以上的星座图优化，可能需要16GB以上内存

3. **运行时间**
   - 高级优化算法可能需要较长时间运行，建议使用批处理模式
   - 可以通过调整迭代次数和批大小来平衡性能和精度

4. **结果解读**
   - 星座图优化结果可能因随机初始化而有所不同
   - 建议多次运行并取平均值，以获得更可靠的结果

## 已知问题

1. **Sionna版本兼容性**
   - 某些功能可能随Sionna版本更新而变化
   - 建议使用Sionna 0.13.0+版本

2. **特殊字符显示**
   - 在某些环境下，图表中的负号可能显示异常
   - 已添加 `plt.rcParams["axes.unicode_minus"] = False` 来解决此问题

3. **文件访问权限**
   - 在某些操作系统上，可能需要管理员权限才能保存文件
   - 建议以管理员身份运行或修改保存路径

## 更新日志

### 版本 1.0.0
- 初始版本发布
- 支持基础星座图优化
- 提供多种可视化工具

### 版本 1.1.0
- 添加高级星座图优化功能
- 修复环境配置问题
- 优化性能和稳定性

### 版本 1.2.0
- 添加更多分析工具
- 改进可视化效果
- 增加对不同信道模型的支持

## 联系我们

如有任何问题或建议，请联系项目维护者。
- 邮箱：caojh2005@163.com
- GitHub：https://github.com/KingtaShawn/python-constellation-optimizer